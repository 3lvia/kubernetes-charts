# Default values for elvia-deployment.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

name: github-repository-team-adder
namespace: core
microserviceType: webapi
#environment: dev

replicaCount: 2

# image:
  # repository: # uses default repo
  #tag: # tag set in pipeline

strategy:
  type: Recreate

imagePullSecret: containerregistryprodsecret

resources:
  dev:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  test:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  dvtest:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  prod:
    limits:
      cpu: 1000m
      memory: 800Mi
    requests:
      cpu: 500m
      memory: 500Mi

env: 
- name: ASPNETCORE_URLS
  value: http://+:8080
- name: my_key_from_config_map
  valueFrom:
    configMapKeyRef:
      key: my_key
      name: github-repository-team-adder

volumes:
- configMap:
    name: github-repository-team-adder
  name: my-volume

volumeMounts:
- mountPath: /usr/share/nginx/html/assets/
  name: my-volume

service:
  port: 2112

lifecycle:
  preStop:
    exec:
      command:
      - sleep
      - "15"

readinessProbe:
  failureThreshold: 3
  httpGet:
    path: /metrics
    port: 2112
    scheme: HTTP
  initialDelaySeconds: 15
  periodSeconds: 15
  successThreshold: 1
  timeoutSeconds: 3

livenessProbe:
  failureThreshold: 5
  httpGet:
    path: /metrics
    port: 2112
    scheme: HTTP
  initialDelaySeconds: 15
  periodSeconds: 15
  successThreshold: 1
  timeoutSeconds: 3

startupProbe:
  failureThreshold: 15
  httpGet:
    path: /metrics
    port: 2112
    scheme: HTTP
  initialDelaySeconds: 1
  periodSeconds: 1
  successThreshold: 1
  timeoutSeconds: 1

sidecars:
  sidecar:
    name: cloud-sql-proxy
    resources:
      requests:
        cpu: 100m
        memory: 512Mi
      limits:
        cpu: 100m
        memory: 512Mi
    image:
      repository: gcr.io/cloud-sql-connectors/cloud-sql-proxy:latest
    args:
      # If connecting from a VPC-native GKE cluster, you can use the
      # following flag to have the proxy connect over private IP
      # - "--private-ip"

      # If you are not connecting with Automatic IAM, you can delete
      # the following flag.
      - "--auto-iam-authn"

      # tcp should be set to the port the proxy should listen on
      # and should match the DB_PORT value set above.
      # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
      - "--port=5432"
      - "<INSTANCE_CONNECTION_NAME>"
