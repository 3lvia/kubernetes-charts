trigger:
  - '*'

pool:
  vmImage: "ubuntu-latest"

variables:
  containerRegistry: "ContainerRegistryElvia"

stages:
- stage: ChartTesting
  jobs:
    - job: RunChartTesting
      #container: quay.io/helmpack/chart-testing:latest
      pool:
        vmImage: "ubuntu-20.04"
      steps:
        - script: |
            mkdir ~/.kube
            echo "$kubectlconfig" >> config
            mv config ~/.kube
            echo "kubectlconfig:           $kubectlconfig"
            echo "containerregistry:           $(containerregistry)"
          displayName: Print echo
          workingDirectory: $(Build.SourcesDirectory)

        - script: |
            curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
            sudo apt-get install apt-transport-https --yes
            echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
            sudo apt-get update
            sudo apt-get install helm
          displayName: Install helm 3
        - script: sudo apt-get install yamllint
          displayName: Install yamllint
        - script: |
            sudo apt-get update 
            sudo pip3 install setuptools
            sudo pip3 install yamale    
          displayName: Install yamale
        - script: |
            curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
          displayName: Install kubectl
        - script: brew install chart-testing
          displayName: Install ct
        - script: |
            mkdir $HOME/.ct
            mv ct/etc/* $HOME/.ct/
          displayName: Configure ct config
          workingDirectory: $(Build.SourcesDirectory)
        
        - script: ct lint --all --config ct.yaml
          displayName: Run lint
          workingDirectory: $(Build.SourcesDirectory)
          

          


