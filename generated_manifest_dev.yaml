---
# Source: elvia-deployment/templates/service-monitor.yaml
kind: ServiceMonitor
apiVersion: monitoring.coreos.com/v1
metadata:
  name: ingress-volumereadings
  namespace: mdmx
spec:
  endpoints:
  - port: ingress-volumereadingsport
  selector:
    matchLabels:
      app: ingress-volumereadings
---
# Source: elvia-deployment/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-volumereadings
  namespace: mdmx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-volumereadings
      microservice-type: worker
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ingress-volumereadings
        microservice-type: worker
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
    spec:
      serviceAccountName: ingress-volumereadings
      imagePullSecrets:
      - name: containerregistryelvia
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        supplementalGroups: [1001]
      containers:
      - name: ingress-volumereadings
        env:
        - name: VolumeReading__Url
          value: http://localhost:8080
        - name: MDMX_API_HOSTNAME
          valueFrom:
            configMapKeyRef:
              key: mdmxapi.readings.url
              name: ingress-volumereadings
        - name: MDMX_API_READINGS_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: mdmxapi.readings.endpoint
              name: ingress-volumereadings
        - name: MDMX_API_USE_MOCK_CLIENT
          value: "false"
        image: containerregistryelvia.azurecr.io/mdmx-ingress-volumereadings:20211024.4 
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
        resources:
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 512Mi
      - name: gs2parser
        env:
        - name: VolumeReading__Url
          value: http://localhost:8080
        - name: MDMX_API_HOSTNAME
          valueFrom:
            configMapKeyRef:
              key: mdmxapi.readings.url
              name: ingress-volumereadings
        - name: MDMX_API_READINGS_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: mdmxapi.readings.endpoint
              name: ingress-volumereadings
        - name: MDMX_API_USE_MOCK_CLIENT
          value: "false"
        image: containerregistryelvia.azurecr.io/mdmx-gs2parser:20211024.4  
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
        resources: map[limits:map[cpu:100m memory:512Mi] requests:map[cpu:100m memory:512Mi]]
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 512Mi




---
# Source: elvia-deployment/templates/configmap.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress-volumereadings
  namespace: mdmx
data:
  mdmxapi.readings.endpoint: readings
  mdmxapi.readings.url: https://mdmx.dev-elvia.io/api

---
# Source: elvia-deployment/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: ingress-volumereadings
  namespace: mdmx
  labels:
    app: ingress-volumereadings
spec:
  ports:
  - name: ingress-volumereadingsport
    port: 2112 # Default prometheus port for worker
 
  selector:
    app: ingress-volumereadings
